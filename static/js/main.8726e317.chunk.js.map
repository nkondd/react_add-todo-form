{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","title","completed","id","classNames","TodoList","todos","map","username","getTodos","userId","usersFromServer","find","App","useState","userSelected","setUserSelected","userError","setUserError","titleError","setTitleError","setTitle","setTodos","action","method","onSubmit","event","preventDefault","currentUser","Math","max","getTodo","current","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8726e317.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    title,\n    completed,\n    user,\n    id,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\n\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nconst getTodos: Todo[] = todosFromServer.map((todo) => ({\n  ...todo,\n  user: usersFromServer.find((user) => user.id === todo.userId) || null,\n}));\n\nconst getTodo = (\n  currentUser: User,\n  title: string,\n  todos: Todo[],\n): Todo => {\n  const maxId = Math.max(...todos.map(todo => todo.id));\n\n  return ({\n    id: maxId + 1,\n    title,\n    completed: false,\n    userId: currentUser.id,\n    user: currentUser,\n  });\n};\n\nexport const App = () => {\n  const [userSelected, setUserSelected] = useState('');\n  const [userError, setUserError] = useState(false);\n  const [titleError, setTitleError] = useState(false);\n  const [title, setTitle] = useState('');\n  const [todos, setTodos] = useState(getTodos);\n\n  const handleChangeTitle = (event:React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n\n    setTitleError(false);\n  };\n\n  const handleSelectUser = (event:React.ChangeEvent<HTMLSelectElement>) => {\n    setUserSelected(event.target.value);\n\n    setUserError(false);\n  };\n\n  const resetForm = () => {\n    setTitle('');\n    setUserSelected('');\n  };\n\n  const handleAddTodo = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const currentUser = usersFromServer\n      .find(user => user.name === userSelected) || null;\n\n    if (!currentUser) {\n      setUserError(true);\n    }\n\n    if (!title) {\n      setTitleError(true);\n    }\n\n    if (currentUser && title) {\n      const todo = getTodo(currentUser, title, getTodos);\n\n      setTodos(current => ([\n        ...current,\n        todo,\n      ]));\n\n      resetForm();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleAddTodo}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleChangeTitle}\n            />\n          </label>\n\n          {titleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n\n            <select\n              data-cy=\"userSelect\"\n              value={userSelected}\n              onChange={handleSelectUser}\n            >\n              <option value=\"\" disabled>Choose a user</option>\n\n              {usersFromServer.map(user => (\n                <option value={user.name} key={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {userError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}